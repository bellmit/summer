#sharding.jdbc.datasource.names=db0,db1
#
#sharding.jdbc.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
#sharding.jdbc.datasource.db0.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.db0.url=jdbc:mysql://localhost:3306/db0?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
#sharding.jdbc.datasource.db0.username=root
#sharding.jdbc.datasource.db0.password=123456
#
#sharding.jdbc.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
#sharding.jdbc.datasource.db1.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.db1.url=jdbc:mysql://localhost:3306/db1?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
#sharding.jdbc.datasource.db1.username=root
#sharding.jdbc.datasource.db1.password=123456
##
#sharding.jdbc.config.sharding.default-data-source-name=db1
##sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
##sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=db$->{user_id % 2}
#
##sharding.jdbc.config.sharding.tables.user.logicTable: user
##sharding.jdbc.config.sharding.tables.user.actual-data-nodes=db$->{0}.user
#
#
#
#sharding.jdbc.config.sharding.tables.order.logicTable: order
#sharding.jdbc.config.sharding.tables.order.actual-data-nodes: db$->{0..1}.order$->{0..1}
#sharding.jdbc.config.sharding.tables.order.database-strategy.standard.sharding-column: user_id
##sharding.jdbc.config.sharding.tables.order.database-strategy.inline.algorithm-expression=db$->{user_id % 2}
#sharding.jdbc.config.sharding.tables.order.database-strategy.standard.precise-algorithm-class-name=com.summer.sharding.shardingAlgorithm.OrderDataBaseShardingAlgorithm
#sharding.jdbc.config.sharding.tables.order.table-strategy.standard.sharding-column: order_id
##sharding.jdbc.config.sharding.tables.order.table-strategy.inline.algorithm-expression=order$->{order_id % 2}
#sharding.jdbc.config.sharding.tables.order.table-strategy.standard.precise-algorithm-class-name=com.summer.sharding.shardingAlgorithm.OrderShardingAlgorithm
##sharding.jdbc.config.sharding.tables.order.table-strategy.inline.range-algorithm-class-name: com.example.config.OrderRangeShardingAlgorithm
#sharding.jdbc.config.sharding.tables.order.key-generator-column-name: order_id
#
##sharding.jdbc.config.sharding.tables.order_item.logicTable: order_item
##sharding.jdbc.config.sharding.tables.order_item.actual-data-nodes: db$->{0..1}.order_item_${2018}${['08','09']}
##sharding.jdbc.config.sharding.tables.order_item.table-strategy.standard.sharding-column: order_id
##sharding.jdbc.config.sharding.tables.order_item.table-strategy.standard.precise-algorithm-class-name: com.example.config.OrderShardingAlgorithm
##sharding.jdbc.config.sharding.tables.order_item.table-strategy.standard.range-algorithm-class-name: com.example.config.OrderRangeShardingAlgorithm
##sharding.jdbc.config.sharding.tables.order_item.key-generator-column-name: order_id
##
#sharding.jdbc.config.sharding.binding-tables[0]=order
#
#sharding.jdbc.config.sharding.props.sql.show=true